* Build the GCCLIB LIBRARY
&CONTROL OFF NOMSG
* The following allow the STUB builder to be changed from the C program
* that generates the STUBS to the assembler macros that rather more elegantly
* produce them (thank to Bob Bolch). Both produce the same binary.
* MEMBERS PARM and VTABLE MACRO need to be kept in sync to allow users to
* switch build options.
*
&STUBTYPE = ASMGEN
* &STUBTYPE = CGEN
*
&BEGTYPE

This procedure will generate the following files, replacing any that
already exist:

GCCLIB   TXTLIB   A  - Non-memory-resident object library
GCCRES   TXTLIB   A  - Linkage stubs for memory resident library
GCCLIB   TEXT     A  - Memory resident object library
GCCLIB   MAP      A  - Load map of memory resident object library

&END
*
GLOBAL MACLIB GCCLIB CMSHRC CMSLIB
&IF &RETCODE NE 0 &EXIT &RETCODE
*
* &SDISK is where our sources live.
&SDISK = H
* Output goes on A disk now.

&RESULT = 0

* Note:  if you don't have EMIT MODULE, replace EMIT with &TYPE...

* Stack the assembler files to process.
&BEGSTACK ALL
CMSENTRY RESLIBI CMSJUMP CMSSYS DYNSTK CMSRUNTA
&END
&LOOP -ENDAA &READFLAG = CONSOLE
   &READ ARGS
   &I = 1
   &LOOP -ENDA &INDEX
      EXEC UPTODATE &&I ASSEMBLE &SDISK &&I TEXT &SDISK
      &IF &RETCODE EQ 0 &TYPE &&I TEXT &SDISK is newer than &&I ASSEMBLE &SDISK
      &IF &RETCODE EQ 0 &GOTO -ENDA
      EMIT Assembling &&I
      ASSEMBLE &&I (LIST)
      &IF &RETCODE NE 0 &TYPE Return code &RETCODE from ASSEMBLE &&I
      &IF &RETCODE NE 0 &RESULT = &RETCODE
  -ENDA &I = &I + 1
-ENDAA

&IF &RESULT NE 0 &EXIT &RESULT

* The non-memory-resident capable version of CMSENTRY has been built above.
* It is renamed to CMSENTNR TEXT for inclusion in GCCLIB TXTLIB.

COPYFILE CMSENTRY TEXT    &SDISK CMSENTNR = = (OLDDATE REPLACE)
COPYFILE CMSENTRY LISTING &SDISK CMSENTNR = = (OLDDATE REPLACE)

* Now assemble CMSENTRY again to create the memory-resident capable version
* for inclusion in GCCRES TXTLIB.  This version knows how to find the bulk of
* the GCCLIB C runtime library in shared segments or the RESLIB library.

EMIT Assembling memory-resident capable version of CMSENTRY

ASSEMBLE CMSENTRY (LIST SYSPARM(RES))
&IF &RETCODE NE 0 &EXIT &RETCODE

* Rename this version to CMSENTRS TEXT for inclusion in GCCRES TXTLIB.

COPYFILE CMSENTRY TEXT    &SDISK CMSENTRS = = (OLDDATE REPLACE)
COPYFILE CMSENTRY LISTING &SDISK CMSENTRS = = (OLDDATE REPLACE)

ERASE    CMSENTRY TEXT    &SDISK
ERASE    CMSENTRY LISTING &SDISK

* Stack the C files to process.
&BEGSTACK ALL
CMSRTSTB CMSRUNTM MALLOC CMSSYSC CMSSTDIO CMSSTDLB ASSERT CTYPE LOCALE
MATH SIGNAL STRING TIME CMSIO CONDRV  PUNDRV   PRTDRV   RDRDRV DSKDRV RESMAIN
REXXSAA
&END
&LOOP -ENDCC &READFLAG = CONSOLE
   &READ ARGS
   &I = 1
   &LOOP -ENDC &INDEX
      EXEC UPTODATE &&I C &SDISK &&I TEXT &SDISK
      &IF &RETCODE EQ 0 &TYPE &&I TEXT &SDISK is newer than &&I C &SDISK
      &IF &RETCODE EQ 0 &GOTO -ENDC
      EMIT Compiling &&I
      EXEC GCC &&I C &SDISK (CSECT LIB GCCLIB PARM GCCLIB
      &IF &RETCODE NE 0 &RESULT = &RETCODE
   -ENDC &I = &I + 1
-ENDCC

&IF &RESULT NE 0 &EXIT &RESULT

&TYPE Building GCCLIB TXTLIB A ...
TXTLIB GEN GCCLIB CMSENTNR
TXTLIB ADD GCCLIB CMSRTSTB
TXTLIB ADD GCCLIB CMSRUNTM
TXTLIB ADD GCCLIB CMSRUNTA
TXTLIB ADD GCCLIB DYNSTK
TXTLIB ADD GCCLIB CMSJUMP
TXTLIB ADD GCCLIB CMSIO
TXTLIB ADD GCCLIB CONDRV
TXTLIB ADD GCCLIB PUNDRV
TXTLIB ADD GCCLIB PRTDRV
TXTLIB ADD GCCLIB RDRDRV
TXTLIB ADD GCCLIB DSKDRV
TXTLIB ADD GCCLIB CMSSTDIO
TXTLIB ADD GCCLIB CMSSTDLB
TXTLIB ADD GCCLIB MALLOC
TXTLIB ADD GCCLIB CMSSYSC
TXTLIB ADD GCCLIB CMSSYS
TXTLIB ADD GCCLIB ASSERT
TXTLIB ADD GCCLIB CTYPE
TXTLIB ADD GCCLIB LOCALE
TXTLIB ADD GCCLIB MATH
TXTLIB ADD GCCLIB SIGNAL
TXTLIB ADD GCCLIB STRING
TXTLIB ADD GCCLIB TIME
TXTLIB ADD GCCLIB REXXSAA

&TYPE Building GCCRES TXTLIB A ...
TXTLIB GEN GCCRES CMSENTRS
TXTLIB ADD GCCRES RESLIBI
TXTLIB ADD GCCRES CMSRTSTB
TXTLIB ADD GCCRES DYNSTK
*
&IF &STUBTYPE = ASMGEN &GOTO -ASMGEN1
&IF &STUBTYPE = CGEN &GOTO -CGEN1
&TYPE INVALID STUBTYPE
&EXIT 1
*

-CGEN1

* In this case, MAKELIB puts files ASSEMBLE and therefore TEXT files on A disk
&VDISK = A

EMIT Building MAKELIB ...
EXEC GCC MAKELIB C &SDISK (LIB GCCLIB PARM GCCLIB
&IF &RETCODE NE 0 &TYPE Return code &RETCODE from GCC MAKELIB C &SDISK (CMS
&IF &RETCODE NE 0 &EXIT &RETCODE

GLOBAL TXTLIB GCCLIB
LOAD MAKELIB
GENMOD MAKELIB
GLOBAL TXTLIB

MAKELIB MEMBERS PARM &SDISK
&IF &RETCODE NE 0 &RESULT = &RETCODE

&IF &RESULT > 0 &EXIT &RESULT

EMIT Adding members to GCCRES TXTLIB...
&LOOP -ENDSTBS &READFLAG = CONSOLE
   &READ ARGS
   &I = 1
   &LOOP -ENDSTB &INDEX
     ASSEMBLE &&I (NOLIST NOTERM)
     &IF &RETCODE NE 0 &TYPE Return code &RETCODE from ASSEMBLE &&I
     &IF &RETCODE > 4 &RESULT = &RETCODE
     TXTLIB ADD GCCRES &&I
   -ENDSTB &I = &I + 1
-ENDSTBS

&IF &RESULT NE 0 &EXIT &RESULT

&GOTO -CONT1

-ASMGEN1

* In this case, TEXT files end up on &SDISK
&VDISK = &SDISK

EMIT Assembling CMSSTUBS
ASSEMBLE CMSSTUBS (LIST)
&IF &RETCODE NE 0 &TYPE Return code &RETCODE from ASSEMBLE CMSSTUBS
&IF &RETCODE > 4 &EXIT &RETCODE

TXTLIB ADD GCCRES CMSSTUBS

&GOTO -CONT1
*
-CONT1
*
EMIT Assembling CMSVTAB
ASSEMBLE CMSVTAB (NOLIST NOTERM)
&IF &RETCODE NE 0 &TYPE Return code &RETCODE from ASSEMBLE CMSVTAB
&IF &RETCODE > 4 &EXIT &RETCODE

&IF &STUBTYPE EQ CGEN ERASE CMSVTAB ASSEMBLE A

EMIT Building GCCLIB TEXT...
COPYFILE CMSVTAB  TEXT &VDISK GCCLIB TEXT A (REPLACE)
&IF &RETCODE NE 0 &TYPE Return code &RETCODE from COPYFILE CMSVTAB TEXT &VDISK GCCLIB TEXT A
&IF &RETCODE NE 0 &EXIT &RETCODE

&IF &STUBTYPE EQ CGEN ERASE CMSVTAB TEXT     A

* And add the rest of the TEXT files
&BEGSTACK ALL
RESMAIN
CMSRUNTM CMSRUNTA DYNSTK CMSJUMP
CMSIO CONDRV PUNDRV PRTDRV RDRDRV DSKDRV
CMSSTDIO CMSSTDLB MALLOC CMSSYSC CMSSYS ASSERT CTYPE
LOCALE MATH SIGNAL STRING TIME REXXSAA
&END
&LOOP -ENDTT &READFLAG = CONSOLE
   &READ ARGS
   &I = 1
   &LOOP -ENDT &INDEX
      COPYFILE &&I  TEXT &SDISK GCCLIB TEXT A (APPEND)
      &IF &RETCODE NE 0 &TYPE Return code &RETCODE FROM COPYFILE &&I TEXT &SDISK GCCLIB TEXT A
      &IF &RETCODE NE 0 &RESULT = &RETCODE
   -ENDT &I = &I + 1
-ENDTT

&IF &RESULT NE 0 &EXIT &RESULT

&TYPE Building GCCLIB MAP

GLOBAL TXTLIB GCCRES
LOAD GCCLIB (MAP)

COPYFILE LOAD MAP A GCCLIB MAP A (OLDDATE REPLACE)
ERASE LOAD MAP A

&EXIT
