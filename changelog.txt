GCCLIB Change LOG
=================

1.0.0 - 15 Apr 2021
F0054 - Updated Build process for CE
        Removed Old files / Old Build Process
F0053 - Removed SYSPROFB EXEC

0.8.5 - 14 Mar 2021
F0052 - Renamed the new CMSdebug() to CMSsetdebug() to avoid the duplicate!

0.8.4 - 14 Mar 2021
F0051 - Added CMSdirectRead() Read from the virtual console, bypassing stack
F0050 - Added GCCLIB [VERSION|DEBUG] argument
          VERSION prints version
          DEBUG prints version, anchor and turns on debug mode
      - Added CMSdebug() to set debug mode (enables memory leak warning)
      - Initialise "scale" local variable, in log() in math.c

0.8.3 - 4 Feb 2021
F0049 - EPLIST Parsing Error

0.8.2 - 15 Dec 2020
F0048 - Code reformatting
        Added -D__CMS__ to CMAKE so that the right #ifdefs work including code
        reformatting
F0047 - Code reformatting
        Added fake CMAKE so the IDEs can show code errors/warnings
        Local Build - Stop MSYS2 rewriting directory paths in the docker container

0.8.1 - 26 Nov 2020
F0046 - FIX - fwrite() crashed when size or count are zero
      - Implemented CMSfunctionDataArray() for binary arguments for calltype 5 calls
F0045 - Theme - make calltype 5 handle binary data
      - Implement CMSreturndata()
      - Change CMSfunction calltype family of functions to return the returned data length
        on success
      - Updated tests
      - Updated local build script (cp2vm370.sh) for MacOS/Linux

0.8.0-  4 Oct 2020
F0044 - Fix for __ZONE when HRC700DK not installed
F0043 - Fix for Calltype 5 allocation (double word not fullword)
      - cmssys.assemble
        __STACKN entry point to call the SENTRIES command provided by HRC406DS
        __ZONE entry point to return the time zone offset from GMT in seconds
      - time.c use __ZONE to get local time
F0042 - Fix for Calltype 5 without a return buffer
        Fix for CMSargc() return type
        Fix for tstarg2 CMSplist() casting
F0041 - REXXSAA RexxVariablePool

0.7.19- 31 August 2020
F0040 - Fix for calltype 5 returns where RC is auto-converted to the return
        string. The integer RC is set to zero as the call itself was successfull
        The return string has the 'correct' return code.
      - Added 0x to the anchor address announcement

0.7.18- 28 August 2020
F0039 - Reoranised header files a bit to *reduce* circular dependancies
      - Changed CMSGetPG() to macro - performance


0.7.17- 11 August 2020
F0038 - Add support for being called via a type 5 call
      - Assist to turn main() return int into a calltype 5 return EVALBLOK string
      - Functions to set return evalblok
      - Functions to access PLIST, EPLIST, argv, argc, callype and func/subroutine values
      - Parameters passed in an array or passed as a variable number of parameters supported
      - Simple Call Macros CMSsimplefuntion() CMSsimpleprocedure()
F0037 - CMSfunction() - call type 5
F0036 - Process Global Memory: CMSPGAll() & CMSGetPG()

0.7.16- 26 July 2020
F0035 - Minor: Explict cast (int to void*) in resmain.c
      - GIT Config to force LF file line endings
      - Changed SYSPROF EXEC to fixed record format (Workaround for a argument
        defect)

0.7.15- 25 July 2020
F0034 - Update to SYSPROF EXEC to initalise BREXX Anchor
F0033 - Include Option for Alternative Stub Build (thanks Bob Bolch)
        See top of MKGCCLIB EXEC and MKGCCMAC EXEC for opton
      - Changed YATA option to read directly from READER. The archive had
        too many records for the file system (an OMG moment!), it shows off the
        new gcclib unix like stream handling, READER is just like any file :-)
F0032 - Remove EPLIST Magic Marker Hack! True fix done by HRC402DS CMS Mod
      - Move to builder tag image for builds
      - Added Argument Test

0.7.14- 22 July 2020
F0031 - Fix to punchc parameters (thanks Bob Bolch)
F0030 - Fix r+ mode variable record files so the last record no
        longer truncated to the existing max record
        Fix fwrite() in text mode needs now processes newlines
        Optimiser turned on again!

0.7.13- 19 July 2020
F0029 - fgethandle() now ignores any lrecl or recfm information
      - REXX Assist: nextrecLen()
      - ftell() error code fix

0.7.12- 14 July 2020
F0028 - REXX ASSISTS:
          fateof() - is at the end of the file
          fgethandle() - if the file is open
          fgetrecs()
          fgetchars()
          append() - the oposite of rewind()
F0027 - Fix SIGTERM handler overwriting User Exit function
F0026 - Automate Stub Build (C based builder MAKELIB)
      - Re-entrant version of CMSSYS (Thanks to Bob Bolch)
      - Re-entrant version of CMSENTRY (Thanks to Bob Bolch)
      - ABORT announces errno / message
      - DLMALLOC announces line number of any panic
      - GCCLIB announces version
      - GCCLIB sets Stub Anchor in NUCON (NUCRSV7)
      - Performance tuned DYNSTAK (Thanks to Bob Bolch)
F0025 - Changed to -O2 optimisation (-O3 seems to have a bug)
      - Changed code to support -Wall -pedantic -ansi builds
      - Remove stdout, stdin, stdout, errno, etc. from client library static globals
      - Removed strtok()'s static variable

0.7.11- 22 June 2020
F0024 - IO Refactoring / Drivers
      - Record cache for random record access
      - Read/Write files
      - Close files on exit
      - fix __wrterm() needed on startup
      - fix fopen() with missing file mode
      - removed notyet()
      - setvbuf()/setbuf() Implemented
      - tmpfile() implemented
      - putc()/putchar()/getc()/getchar() turned into macros
      - freopen() Implemented
      - fread()/fputs()/fgets() no longer just use putc()/getc() - performance
      - IO Test Suite
F0023 - Fix for Issue #12 (CMS System Function should be functions not defines)
F0022 - Fix for Issue #3 (Writing a empty line causes an error)
F0021 - Fix for Issue #1 (ctype.h has c++ style comments)
F0020 - Implement atexit()
F0019 - SIG_DFL, SIG_ERR, SIG_IGN made pointers to non-real functions
        as per standards and to remove RESLIB linkage issues
F0018 - printf() fix for string precision of 1 causing the whole string to be
        printed rather than just one character

0.7.10- 10 May 2020
F0017 - CMSGetFlag(), CMSSetFlag() for HI/TS/TE Immediates
        Thanks to Bob Bolch

0.7.9 - 6 May 2020
F0016 - Calltype 11 emulation - report RC=-3 if CP command not found (i.e. revert
                                to CMS not found RC)
                                report RC=-1 if explicit CP command not found
                                (CP RC 1 turned to -1)

0.7.8 - 5 May 2020
F0015 - Calltype 11 (CMS_CONSOLE) Emulation
        Build with optimiser (-O3)
F0014 - Workaround for memory error in stdio; __wrterm added in cmsrtstb.c
        which seemed to clear/reset stdout for subsequent RESLIB runs
        Clean MORECORE comments *only* from cmssysc.c

0.7.7 - 3 May 2020
F0013 - Build update - create VMARC source and binary archives

0.7.6 - 2 May 2020
F0012 - Build Update - Create Source tape.
        Updates move FIXRECFM from BUILD EXEC as we want file format
        to be correct for source tape.
        Changes to PREPARE EXEC to remove unwanted macro libraries.
F0011 - Signal and raise to RESLIB
        Make abort() raise SIGABRT signal
        Default SIGABRT signal handler now aborts program
F0010 - Assembler versions of memset, memcpy, memmove
F0009 - Dynamic Stack - longjmp friendly, i.e. needs
        to clear up orphaned allocated stack bins when LESSSTAK
        is called. This keeps longjmp fast, stops memory leaks
        and preserves "non-standard" behaviour people depend on.
        Longjmp and setjmp to RESLIB.
        Stdio.c now uses malloc/free.
        Memory leak detection.
        Memory de-allocation on exit().
F0008 - Dynamic Stack
        Added contrib.txt for all contributed code
        Abort() now uses the auxstack to ensure it can always run
        Abort() no longer calls exit() - i.e. no clean-up as per standards
F0007 - Implement malloc() etc. with DLMALLOC
        which needed RESLIB fix for exit()
        which needed RESLIB fix for assert()
        which needed RESLIB fix for abort()
F0006 - Refactor errno - global variable to anchor struct
        Implement perror()
        Update STDIO library to use perror()
F0005 - Refactor STDIO Logic (global stdin, out and err)

0.7.5 - 24 Mar 2020
F0004 - Refactor CMSEntry - moving complex logic to C
        Fix Parameter passing (Added Magic EPLIST Marker)

0.7.4 - 11 Mar 2020
F0003 - (Issue 8) Call Parameter (CMSCommmand) Fixes
        Restore Registers at program end (CMSEntry)

0.7.2 - 1 Mar 2020
F0002 - (issue 5) __FSTAT signature update in Headers (comments only)
        (issue 6) Fix arguments getting mangled from previous runs

0.7.1 - 21 Feb 2020
F0001 - Automated Build and Install

<0.7.0 - Prehistory Versions
